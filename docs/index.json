[{"content":"This what the winding number $n(\\gamma ,a)$ of curve $\\gamma$ around point $a$, expressed as special case of Cauchy\u0026rsquo;s integral formula looks like on potentially-non-closed loops, with complex numbers mapped to a hue-luminance space.\n$$ n(\\gamma ,a) = \\frac{1}{2 \\pi i}\\int_{\\gamma}^{}\\frac{1}{z-a}dz $$\nDemo: Reset\rShuffle\rCircle\rSquare\rLevy Dragon\r+\r-\rThis animation requires WebGL\nnote comme quoi sur mobile ça marche pas because on utilise des textures pour stoquer les valeurs et que celles ci sont 4 bits sur mobile, 16 bits sur desktop https://webglfundamentals.org/webgl/lessons/webgl-precision-issues.html#texture-formats\nbien expliciter que a c\u0026rsquo;est chaque pixel, qu\u0026rsquo;on peut hover pour avoir la valeur qu\u0026rsquo;on peut drag pour faire une ligne et que cette ligne c\u0026rsquo;est gamma, avec z la position au moment de drag et dz un micro segment qu\u0026rsquo;on peut spécifier avec la précision, et que c\u0026rsquo;est une somme, hein, on fait pas les choses analytiquement\ndonner un lien vers le nouveau repo que tu va utiliser\nCalculating the Winding number with Cauchy With WebGL\na line integral cauchy formula\nLines compose: closing a line on itself can be done randomly, or at a later time Partir de la formule et voir les symétries\nThere\u0026rsquo;s a multitude of ways to put things on the real plane: like a multitude of ways to reach point A from B\nClosed forms which share a border going on the other direction can form a bigger structure corrolary: you can split a bigger closed loop into 2, and conserve the realness\nexplain a bit the buttons\nStory time!\nn(\\gamma ,a) = \\frac{1}{2 \\pi i}\\int_{\\gamma}^{}\\frac{1}{z-a}dz\nIn prepa schools, in proving Cauchy’s Integral Formula[wiki link], there\u0026rsquo;s this winding number, which I always found remarquable: out of seemingly continuous operators outputs a discreet number! and it gives just the right amount of loops the curve goes around it always outputs an integer on a closed loop, but what if the loop is not closed also, complex numbers are two dimensionalm but we can find a space to display that we need to do large summation: we have a 2 dimensional here 500x500, and we may want loops that are describe by about 1000 pixels in that space so that\u0026rsquo;s 250M divisions to do (we consider that summation and substracting are free compared to dividing). other than constant propagation, we did not try to use other mathematical tricks and just brute-forced the problem So we need a GPU. (disclaimer alt: I did it first on a CPU and it was slow) Defining a color space we want real to be different from each other, in kind, and be clear from other numbers that have an imaginary part so let\u0026rsquo;s assign hue to real part, and luminance for im part (black for neg, white for pos)\nEN EN EN\nnkfdskjfdshkfdsl\ndsadsas\nBlah 2 Blah 3 ","permalink":"http://example.org/posts/winding-cauchy-integral/","title":"Winding numbers using a Cauchy integral formula with WebGL"}]